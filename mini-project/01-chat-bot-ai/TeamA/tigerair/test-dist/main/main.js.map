{"version":3,"sources":["../../test/main/main.js"],"names":["cheerio","require","path","fs","moment","firebaselib","module","exports","browser","startStation","backStation","i","thismoment","add","todayYearMonth","format","today","url","waitForElementVisible","click","e","console","log","pause","source","result","$","load","value","html","results","each","elm","thisstring","regex","RegExp","test","date","exec","pricetext","find","first","text","pricearr","split","currencyCode","price","push","form","to","results2","map","data","write"],"mappings":"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","file":"main.js","sourcesContent":["var cheerio = require(\"cheerio\")\nvar path = require(\"path\")\nvar fs = require(\"fs\")\nvar moment = require(\"moment\")\n\nvar firebaselib = require(\"./firebaselib\")\n\n// async function hello() {\n//     return new Promise((resolve) => {\n//         resolve('ok');\n//     });\n// }\n\n// (async() => {\n//     let ok = await hello();\n//     console.log(ok);\n// })()\n\nmodule.exports = {\n\n\n    '抓取虎航的資料': (browser) => {\n        //         // console.log(browser);\n\n\n        let startStation = 'KHH';\n        let backStation = 'KIX';\n\n\n\n\n        //+9天抓一個禮拜\n\n        // break;\n\n\n        for (var i = 0; i < 2; i++) {\n            let thismoment = moment().add(9 * i, 'day');\n            let todayYearMonth = thismoment.format(\"YYYY-MM\");\n            let today = thismoment.format(\"DD\");\n            browser.\n            url('https://booking.tigerair.com/Search.aspx?culture=zh-TW')\n                .waitForElementVisible('body', 1000)\n                .click(`#ControlGroupSearchView_AvailabilitySearchInputSearchVieworiginStation1 option[value=\"${startStation}\"]`)\n                .click(`#ControlGroupSearchView_AvailabilitySearchInputSearchViewdestinationStation1 option[value=\"${backStation}\"]`)\n                .click(`#ControlGroupSearchView_AvailabilitySearchInputSearchView_DropDownListMarketMonth1 option[value=\"${todayYearMonth}\"]`)\n                .click(`#ControlGroupSearchView_AvailabilitySearchInputSearchView_DropDownListMarketDay1 option[value=\"${today}\"]`)\n                .click(`#ControlGroupSearchView_AvailabilitySearchInputSearchView_DropDownListMarketMonth2 option[value=\"${todayYearMonth}\"]`)\n                .click(`#ControlGroupSearchView_AvailabilitySearchInputSearchView_DropDownListMarketDay2 option[value=\"${today}\"]`)\n                .click(\".btnSearchPanel\", function (e) {\n                    console.log(e)\n                })\n                .pause(2000)\n                .source(function (result) { // .source() will dump the target page into text format\n                    //         //                     //  console.log(result.value);\n                    var $ = cheerio.load(result.value) // so it needs to be parse\n\n\n\n\n                    let html = $('#lfMarket1 > li').html();\n                    var results = [];\n                    $('#lfMarket1 > li').each(function (i, elm) {\n\n                        //                             //跑每一個 li 找出日期 與 價格\n                        //                             //console.log($(elm).html());\n                        //                             //var thisstring = $(elm).text();\n                        var thisstring = $(elm).html();\n\n                        //let regex = new RegExp(\"\\\\d{0,4}.{1}\\\\d{1,2}.{1}\\\\d{1,2}\");\n                        let regex = new RegExp(\"\\\\d{0,4}\\\\-\\\\d{1,2}\\\\-\\\\d{1,2}\");\n                        if (regex.test(thisstring)) {\n                            let date = regex.exec(thisstring)[0];\n                            //抓金額\n                            let pricetext = $(elm).find('span').first().text();\n                            let pricearr = pricetext.split(\" \");\n                            let currencyCode = pricearr[0];\n                            let price = pricearr[1];\n                            results.push({\n                                date,\n                                currencyCode,\n                                price,\n                                source: '虎航',\n                                form: startStation,\n                                to: backStation\n                            });\n                        }\n                    })\n\n                    var results2 = [];\n                    $('#lfMarket2 > li').each(function (i, elm) {\n\n                        //                             //跑每一個 li 找出日期 與 價格\n                        //                             //console.log($(elm).html());\n                        //                             //var thisstring = $(elm).text();\n                        var thisstring = $(elm).html();\n\n                        //let regex = new RegExp(\"\\\\d{0,4}.{1}\\\\d{1,2}.{1}\\\\d{1,2}\");\n                        let regex = new RegExp(\"\\\\d{0,4}\\\\-\\\\d{1,2}\\\\-\\\\d{1,2}\");\n                        if (regex.test(thisstring)) {\n                            let date = regex.exec(thisstring)[0];\n                            //抓金額\n                            let pricetext = $(elm).find('span').first().text();\n                            let pricearr = pricetext.split(\" \");\n                            let currencyCode = pricearr[0];\n                            let price = pricearr[1];\n                            results2.push({\n                                date,\n                                currencyCode,\n                                price,\n                                source: '虎航',\n                                form: backStation,\n                                to: startStation\n                            });\n                        }\n                    })\n\n\n\n\n\n\n                    console.log(results);\n                    //         //  let out = path.join(\"./output/\", `tirgerfly${Date.now()}.html`);\n                    //         // console.log(out);\n\n                    //         // fs.writeFileSync(out, html);\n\n                    (async() => {\n                        try {\n                            //寫入資料\n                            results.map(function (e) {\n                                let data = e.date.split(\"-\");\n                                console.log(data);\n                                (async() => {\n                                    await firebaselib.write(`/tigter/${data[0]}/${data[1]}/${data[2]}/${startStation}${backStation}`, {\n                                        results: e\n                                    });\n                                })();\n                            });\n\n                        } catch (e) {\n                            console.log(e);\n                        }\n\n                        try {\n                            //寫入資料\n                            results2.map(function (e) {\n                                let data = e.date.split(\"-\");\n                                //console.log(data);\n                                (async() => {\n                                    await firebaselib.write(`/tigter/${data[0]}/${data[1]}/${data[2]}/${backStation}${startStation}`, {\n                                        results: e\n                                    });\n                                })();\n                            });\n\n                        } catch (e) {\n                            console.log(e);\n                        }\n                    })();\n\n\n                })\n                .pause(2000)\n        }\n\n\n\n\n    }\n\n\n}\n"]}